@Library('lib2019@master') _

pipeline {
   agent any
   
   parameters {
      string(name: 'GIT_CHECKOUT', defaultValue: 'git@', description: '需要编译的分支路径')
      string(name: 'PACKAGE_ONLY', defaultValue: 'false', description: '跳过编译,只打zip包。')
   }
   
   options {
      buildDiscarder(logRotator(numToKeepStr:"10"))
   }
   
   environment {
      mvnPhase = "clean install"
   }
   
   tools {
      maven 'maven3.6.0'
      jdk 'jdk1.8'
   }

   stages {

   stage('init') {
      steps {
    echo 'begin init...'

 }
}

stage('build dtbs-frw') {
      when {
         expression { return PACKAGE_ONLY.equals("false") }
      }
      steps {
         withEnv(["modName=dtbs-frw", "level=0"]) {
            script {
               changeSetSize = currentBuild.changeSets.size()
            }
            echo 'begin build dtbs-frw...'
            echo  "上次编译的结果: ${currentBuild.previousBuild.result} "
            echo "当前编译结果集: ${currentBuild.changeSets}"

            buildModule("${modName}", mvnPhase)

         }

 }


}

stage('build dtbs-po') {
      when {
         expression { return PACKAGE_ONLY.equals("false") }
      }
      steps {
         withEnv(["modName=dtbs-po", "level=0"]) {
            script {
               changeSetSize = currentBuild.changeSets.size()
            }
            echo 'begin build dtbs-frw...'
            echo  "上次编译的结果: ${currentBuild.previousBuild.result} "
            echo "当前编译结果集: ${currentBuild.changeSets}"

            buildModule("${modName}", mvnPhase)

         }

 }


}

stage('build dtbs-interface') {
      when {
         expression { return PACKAGE_ONLY.equals("false") }
      }
      steps {
         withEnv(["modName=dtbs-interface", "level=0"]) {
            script {
               changeSetSize = currentBuild.changeSets.size()
            }
            echo 'begin build dtbs-frw...'
            echo  "上次编译的结果: ${currentBuild.previousBuild.result} "
            echo "当前编译结果集: ${currentBuild.changeSets}"

            buildModule("${modName}", mvnPhase)

         }

 }


}

   stage('build dtbs-module') {
      when {
         expression { return PACKAGE_ONLY.equals("false") }
      }
      steps {
         withEnv(["modName=dtbs-module", "level=0"]) {
            script {
               changeSetSize = currentBuild.changeSets.size()
            }
            echo 'begin buildModule...' 
            echo  "上次编译的结果: ${currentBuild.previousBuild.result} "
            echo "当前编译结果集: ${currentBuild.changeSets}"
            
            buildModule("${modName}", mvnPhase)
            
         }

 }


}

stage('build dtbs-web') {
      when {
         expression { return PACKAGE_ONLY.equals("false") }
      }
      steps {
         withEnv(["modName=dtbs-web", "level=0"]) {
            script {
               changeSetSize = currentBuild.changeSets.size()
            }
            echo 'begin buildModule...'
            echo  "上次编译的结果: ${currentBuild.previousBuild.result} "
            echo "当前编译结果集: ${currentBuild.changeSets}"

            buildModule("${modName}", mvnPhase)

         }

 }


}

}
 










}

